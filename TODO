* refactor keys and available actions
* mock API for debugging; --debug argument
* `TweetEditor` don't allow tweets with more than 140 chars
  * use different signals for succesfull edits (e.g. 'done')
    and for cancelling (maybe 'cancelled' ?)
* palette
  * modify widgets to include attributes of the palette
* write tests with 100% coverage `timelines.py`
* more customization for scrolling
  * top/bottom offset around focused tweet
  * move by pages (visible tweets)
  * customizable offset scroll
* document
* lists (menu for selecting list?)
* action commands
  * create TLs
    - List buffer
  * buffers
    - User profile 
* multiple account support
* update timelines periodically on a separate thread
* use signals to notify UI components that have to be updated
* check for URLError exceptions and fail gracefully
* check for TwitterError when using the API
